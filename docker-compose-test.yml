version: "3"

services:
  tracer_db:
    container_name: tracer_db
    image: neonlabsorg/tracerdb:latest
    command: postgres -c 'max_connections=1000'
    environment:
      POSTGRES_DB: solana
      POSTGRES_USER: solana-user
      POSTGRES_PASSWORD: solana-pass
    hostname: tracer_db
    expose:
      - "5432"
    networks:
      - net
    healthcheck:
      test: [ CMD-SHELL, "pg_isready -h tracer_db -p 5432 -U solana-user" ]
      interval: 5s
      timeout: 10s
      retries: 10
      start_period: 5s

  tracer_db_deployer:
    container_name: tracer_db_deployer
    image: neonlabsorg/tracerdb_deployer:latest
    environment:
      POSTGRES_HOST: tracer_db
      POSTGRES_DB: solana
      POSTGRES_USER: solana-user
      PGPASSWORD: solana-pass
      HISTORY_PART_SLOT_COUNT: 150
      HISTORY_START_SLOT: 0
      HISTORY_RETENTION_SLOTS: 1500
      MAINTENANCE_SCHEDULE: '*/1 * * * *'
    networks:
      - net
    depends_on:
      tracer_db:
        condition: service_healthy

  postgres:
    container_name: postgres
    image: postgres:14.0
    command: postgres -c 'max_connections=1000'
    environment:
      POSTGRES_DB: neon-db
      POSTGRES_USER: neon-proxy
      POSTGRES_PASSWORD: neon-proxy-pass
    hostname: postgres
    healthcheck:
      test: [ CMD-SHELL, "pg_isready -h postgres -p 5432" ]
      interval: 3s
      timeout: 3s
      retries: 10
      start_period: 5s
    expose:
      - "5432"
    ports:
      - 5432:5432
    networks:
      - net

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: il@neonlabs.org
      PGADMIN_DEFAULT_PASSWORD: qazwsx
    ports:
      - 127.0.0.1:8080:80
    volumes:
      - ./server.json:/pgadmin4/servers.json
    networks:
      - net
    depends_on:
      tracer_db:
        condition: service_healthy
    
  validator:
    container_name: validator
    image: neonlabsorg/neon-validator:v1.14.14-evm-latest-DB-revert
    environment:
      SOLANA_URL: http://validator:8899
      RUST_LOG: solana_runtime::system_instruction_processor=trace,solana_runtime::message_processor=error,solana_bpf_loader=debug,solana_rbpf=debug,neon_dumper_plugin::postgres_client=debug
      GEYSER_PLUGIN_CONFIG: /opt/accountsdb-plugin-config.json
    hostname: validator
    expose:
      - "8899"
      - "9900"
      - "8900"
      - "8001"
      - "8001-8009/udp"
    networks:
      - net
    depends_on:
      tracer_db:
        condition: service_healthy
      tracer_db_deployer:
        condition: service_completed_successfully
    healthcheck:
      # Must be available from outside (calling without -u causes premature result)
      test: [ CMD-SHELL, "./wait-for-neon.sh" ]
      interval: 5s
      timeout: 5s
      retries: 200
      start_period: 5s
    entrypoint: /opt/solana/bin/solana-run-neon.sh
    ports:
      - 127.0.0.1:8899:8899
    volumes:
      - ./ci/accountsdb-plugin-config.json:/opt/accountsdb-plugin-config.json

  dbcreation:
    container_name: dbcreation
    image: neonlabsorg/proxy:latest
    environment:
      SOLANA_URL: http://validator:8899
      POSTGRES_DB: neon-db
      POSTGRES_USER: neon-proxy
      POSTGRES_PASSWORD: neon-proxy-pass
      POSTGRES_HOST: postgres
    entrypoint: proxy/run-dbcreation.sh
    networks:
      - net
    depends_on:
      postgres:
        condition: service_healthy
        
  indexer:
    container_name: indexer
    image: neonlabsorg/proxy:latest
    environment:
      SOLANA_URL: http://validator:8899
      POSTGRES_DB: neon-db
      POSTGRES_USER: neon-proxy
      POSTGRES_PASSWORD: neon-proxy-pass
      POSTGRES_HOST: postgres
      GATHER_STATISTICS: "YES"
      LOG_FULL_OBJECT_INFO: "NO"
      CONFIG: ci
      EVM_LOADER: 53DfF883gyixYNXnM7s5xhdeyV8mVk9T4i2hGV9vG9io
      GENESIS_BLOCK_TIMESTAMP: 0
    hostname: indexer
    depends_on:
      validator:
        condition: service_healthy
      dbcreation:
        condition: service_completed_successfully
    expose:
      - "8887"
    networks:
      - net
    entrypoint: proxy/run-indexer.sh
  
  proxy:
    container_name: proxy
    image: neonlabsorg/proxy:latest
    environment:
      SOLANA_URL: http://validator:8899
      FAUCET_URL: http://faucet:3333
      PROXY_URL: http://proxy:9090/solana
      POSTGRES_DB: neon-db
      POSTGRES_USER: neon-proxy
      POSTGRES_PASSWORD: neon-proxy-pass
      POSTGRES_HOST: postgres
      NEON_CLI_DEBUG_LOG: "YES"
      FUZZING_BLOCKHASH: "NO"
      GATHER_STATISTICS: "YES"
      CONFIG: ci
      PP_SOLANA_URL: ${CI_PP_SOLANA_URL:-https://api.devnet.solana.com}
      PYTH_MAPPING_ACCOUNT: ${CI_PYTH_MAPPING_ACCOUNT:-BmA9Z6FjioHJPpjT39QazZyhDRUdZy2ezwx4GiDdE2u2}
      MIN_OPERATOR_BALANCE_TO_WARN: 4565760000 # = 913152000 * 5 (5 storage accounts) = 4.56576 SOL
      MIN_OPERATOR_BALANCE_TO_ERR: 913152000 # = solana rent 131072 (= Rent-exempt minimum: 0.913152 SOL) SOLs to create a storage
      MINIMAL_GAS_PRICE: 1
      ENABLE_PRIVATE_API: "YES"
      ALLOW_UNDERPRICED_TX_WITHOUT_CHAINID: "YES"
      LOG_FULL_OBJECT_INFO: "NO"
      EVM_LOADER: 53DfF883gyixYNXnM7s5xhdeyV8mVk9T4i2hGV9vG9io
      RUST_BACKTRACE: ${RUST_BACKTRACE:-0}
      # An example of HashiCorp configuration, operator key in base64 lies in the secret_key field
      #   vault kv put -mount=secret neon-proxy/operator-key-2 secret_key=bdSWJ+WwVWdk2XMoxX25monC....A7g+IyA==
#      HVAC_URL: http://vault:8200
#      HVAC_TOKEN: local-test-hvac-token
#      HVAC_MOUNT: secret
#      HVAC_PATH: neon-proxy/
      #
    hostname: proxy
    depends_on:
      dbcreation:
        condition: service_completed_successfully
      postgres:
        condition: service_healthy
      indexer:
        condition: service_started
    expose:
      - "8888"
      - "9090"
    networks:
      - net
    entrypoint: proxy/run-test-proxy.sh
    healthcheck:
      test: [ CMD-SHELL, "/opt/health_check_proxy.sh" ]
      interval: 10s
      timeout: 10s
      retries: 10
      start_period: 5s

  neon-tracer:
    container_name: neon-tracer
    hostname: neon-tracer
    environment:
      RUST_BACKTRACE: 1
      RUST_LOG: neon_tracer::main=info,neon_tracer=info,neon_tracer::evm_runtime=info,neon_tracer::metrics=info,neon_tracer::service::eip1898=info,neon_tracer::data_source::neon_cli=debug
      LISTEN_ADDR: 0.0.0.0:8250
      SOLANA_URL: http://validator:8899
      EVM_LOADER: 53DfF883gyixYNXnM7s5xhdeyV8mVk9T4i2hGV9vG9io
      DB_CONFIG: /opt/db_config.yaml
      EVM_RUNTIME_DB_CONFIG_TAR: /opt/db_config.tar.gz
      WEB3_PROXY: http://proxy:9090/solana
      METRICS_IP: 0.0.0.0
      METRICS_PORT: 9292
      NEON_TOKEN_MINT: HPsV9Deocecw3GeZv1FkAPNCBRfuVyfw9MMwjwRe1xaU
      NEON_CHAIN_ID: 111
      MONITORING_INTERVAL_SEC: 1
      EVM_RUNTIME_KNOWN_REVISIONS: '[{"slot": 0, "revision": "72f95822fe1388adf0d8cbd96c0261188c0510dd"}]'
      EVM_RUNTIME_NETWORK_NAME: tracer-api_net
      ENABLE_ACCOUNT_ORDERING_JOB: "True"
    image: neonlabsorg/neon-tracer:${BUILDKITE_COMMIT:-latest}
    depends_on:
      tracer_db:
        condition: service_healthy
      postgres:
        condition: service_healthy
      validator:
        condition: service_healthy
      proxy:
        condition: service_healthy
    expose:
      - "8250"
    ports:
      - "127.0.0.1:8250:8250"
      - "127.0.0.1:9292:9292"
    networks:
      - net
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./ci/db_config.tar.gz:/opt/db_config.tar.gz

  faucet:
    container_name: faucet
    image: neonlabsorg/faucet:latest
    environment:
      FAUCET_RPC_PORT: 3333
      FAUCET_RPC_ALLOWED_ORIGINS: '["http://neon-tracer-test"]'
      FAUCET_WEB3_ENABLE: 'true'
      WEB3_RPC_URL: http://neon-rpc:9090
      WEB3_PRIVATE_KEY: 0x4deacb079b4714c38f39508aa8900039f2721ed8686835d43347ba9267da767b
      NEON_ERC20_TOKENS: '["0xB521b9F3484deF53545F276F1DAA50ef0Ca82E2d", "0x8a2a66CA0E5D491A001957edD45A6350bC76D708", "0x914782059DC42d4E590aeFCfdbF004B2EcBB9fAA", "0x7A7510b9b18241C788a7aAE8299D1fA6010D8128"]'
      NEON_ERC20_MAX_AMOUNT: 1000
      FAUCET_SOLANA_ENABLE: 'true'
      SOLANA_URL: http://validator:8899
      NEON_OPERATOR_KEYFILE: /root/.config/solana/id.json
      NEON_ETH_MAX_AMOUNT: 1000
      TEST_FAUCET_INIT_NEON_BALANCE: 100000
    hostname: faucet
    ports:
      - "127.0.0.1:3333:3333"
    expose:
      - "3333"
    networks:
      - net
    entrypoint: ./run-test-faucet.sh
    depends_on:
      proxy:
        condition: service_healthy

  neon-rpc:
    container_name: neon-rpc
    hostname: neon-rpc
    image: neonlabsorg/neon-rpc:${BUILDKITE_COMMIT:-latest}
    expose:
      - "9090"
    networks:
      - net
    ports:
      - 127.0.0.1:9090:9090
    depends_on:
      proxy:
        condition: service_healthy
      neon-tracer:
        condition: service_started
  
  neon-tracer-test:
    container_name: neon-tracer-test
    hostname: neon-tracer-test
    image: neonlabsorg/neon-tracer-test:${BUILDKITE_COMMIT:-latest}
    networks:
      - net
    depends_on:
      faucet:
        #condition: service_healthy TODO: Use this after updating faucet image
        condition: service_started
      neon-rpc:
        condition: service_started
        
  prometheus:
    container_name: prometheus
    hostname: prometheus
    image: prom/prometheus:v2.16.0
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - net
    ports:
      - "127.0.0.1:9393:9090"
    depends_on:
      neon-rpc:
        condition: service_started

networks:
  net:

